
-- ==========================  Views  =====================--

CREATE OR REPLACE VIEW SITE_DETAIL
AS
SELECT S.*,
    CONCAT(IFNULL(SP1.VALUE, ""),
        IFNULL(SP2.VALUE, ""),
        IFNULL(SP3.VALUE, ""),
        IFNULL(SP4.VALUE, "")) AS URL,
    SP2.VALUE AS HEART
  FROM SITE AS S
  LEFT JOIN SITE_PARTS AS SP1 ON SP1.ID = S.ONE_ID
  LEFT JOIN SITE_PARTS AS SP2 ON SP2.ID = S.TWO_ID
  LEFT JOIN SITE_PARTS AS SP3 ON SP3.ID = S.THREE_ID
  LEFT JOIN SITE_PARTS AS SP4 ON SP4.ID = S.FOUR_ID;

CREATE OR REPLACE VIEW USER_DETAIL
AS
  SELECT
    USER.*,
    IFNULL(LIKES.LIKES, 0) AS LIKES,
    IFNULL(DISLIKES.DISLIKES, 0) AS DISLIKES
    FROM USER
  LEFT JOIN
    (select USER_ID, COUNT(*) AS LIKES from OPINION
      WHERE FAVORABLE = 1 GROUP BY USER_ID, FAVORABLE) AS LIKES
  ON LIKES.USER_ID = ID
  LEFT JOIN
    (select USER_ID, COUNT(*) AS DISLIKES from OPINION
      WHERE FAVORABLE = 0 GROUP BY USER_ID, FAVORABLE) AS DISLIKES
  ON DISLIKES.USER_ID = LIKES.USER_ID;


CREATE OR REPLACE VIEW EXPLANATION_DETAIL
AS
  SELECT
  EXPLANATION.*,
  IFNULL(LIKES.LIKES, 0) AS LIKES,
  IFNULL(DISLIKES.DISLIKES, 0) AS DISLIKES
  FROM EXPLANATION
  LEFT JOIN
    (select EXPLANATION_ID, COUNT(*) AS LIKES from OPINION
      WHERE FAVORABLE = 1 GROUP BY EXPLANATION_ID, FAVORABLE) AS LIKES
  ON LIKES.EXPLANATION_ID = ID
  LEFT JOIN
    (select EXPLANATION_ID, COUNT(*) AS DISLIKES from OPINION
      WHERE FAVORABLE = 0 GROUP BY EXPLANATION_ID, FAVORABLE) AS DISLIKES
  ON DISLIKES.EXPLANATION_ID = ID;


CREATE OR REPLACE VIEW SITE_EXPLANATION_DETAIL
AS
  SELECT
      SITE_EXPLANATION.*,
      SITE.URL,
      IFNULL(LIKES.LIKES, 0) AS LIKES,
      IFNULL(DISLIKES.DISLIKES, 0) AS DISLIKES
  FROM SITE_EXPLANATION LEFT JOIN
    (SELECT EXPLANATION_ID, COUNT(*) AS LIKES, SITE_ID FROM OPINION
      WHERE FAVORABLE=1
      GROUP BY EXPLANATION_ID, FAVORABLE, SITE_ID) AS LIKES
    ON LIKES.EXPLANATION_ID=SITE_EXPLANATION.EXPLANATION_ID AND
    SITE_EXPLANATION.SITE_ID=LIKES.SITE_ID
    LEFT JOIN (SELECT EXPLANATION_ID, COUNT(*) AS DISLIKES, SITE_ID FROM OPINION
      WHERE FAVORABLE=0
      GROUP BY EXPLANATION_ID, FAVORABLE, SITE_ID) AS DISLIKES
    ON DISLIKES.EXPLANATION_ID=SITE_EXPLANATION.EXPLANATION_ID AND
    DISLIKES.SITE_ID = SITE_EXPLANATION.SITE_ID
      LEFT JOIN SITE_DETAIL AS SITE ON SITE.ID = SITE_EXPLANATION.SITE_ID;

CREATE OR REPLACE VIEW EXPLANATION_CONNECTIONS
AS
  SELECT EXPL.ID AS EXPLANATION_ID,
        F.USER_ID AS AUTHOR_FOLLOWER_ID,
        GF.USER_ID AS GROUP_FOLLOWER_ID,
        ETF.USER_ID AS TAG_FOLLOWER_ID,
        C.AUTHOR_ID AS COMMENT_AUTHOR_ID,
        GC.USER_ID AS GROUP_CONTRIBUTOR_ID,
        Q.ASKER_ID AS QUESTION_ASKER_ID
        FROM EXPLANATION AS EXPL
        LEFT JOIN FOLLOWER AS F ON EXPL.AUTHOR_ID = F.TARGET_ID
        LEFT JOIN GROUP_FOLLOWER AS GF ON EXPL.GROUP_AUTHOR_ID = GF.GROUP_ID
        LEFT JOIN EXPLANATION_TAG AS ET ON ET.REFERENCE_ID = EXPL.ID
      	LEFT JOIN EXPLANATION_TAG_FOLLOWER AS ETF ON ETF.TAG_ID = ET.TAG_ID
        LEFT JOIN EXPLANATION_COMMENT AS C ON EXPL.ID = C.EXPLANATION_ID
        LEFT JOIN GROUPING AS G ON G.ID = C.GROUP_AUTHOR_ID OR G.ID = C.GROUP_AUTHOR_ID
        LEFT JOIN GROUP_CONTRIBUTOR AS GC ON GC.GROUP_ID = G.ID
        LEFT JOIN QUESTION AS Q ON EXPL.WORDS_ID = Q.WORDS_ID;

CREATE OR REPLACE VIEW QUESTION_CONNECTIONS
AS
  SELECT Q.ID AS QUESTION_ID,
        F.USER_ID AS ASKER_FOLLOWER_ID,
        GF.USER_ID AS GROUP_FOLLOWER_ID,
        QTF.USER_ID AS TAG_FOLLOWER_ID,
        QC.AUTHOR_ID AS COMMENT_AUTHOR_ID,
        GC.USER_ID AS GROUP_CONTRIBUTOR_ID
        FROM QUESTION AS Q
        LEFT JOIN FOLLOWER AS F ON Q.ASKER_ID = F.TARGET_ID
        LEFT JOIN GROUP_FOLLOWER AS GF ON Q.GROUP_ASKER_ID = GF.GROUP_ID
        LEFT JOIN QUESTION_TAG AS QT ON QT.REFERENCE_ID = Q.ID
      	LEFT JOIN QUESTION_TAG_FOLLOWER AS QTF ON QTF.TAG_ID = QT.TAG_ID
        LEFT JOIN QUESTION_COMMENT AS QC ON Q.ID = QC.QUESTION_ID
        LEFT JOIN GROUPING AS G ON G.ID = QC.GROUP_AUTHOR_ID
        LEFT JOIN GROUP_CONTRIBUTOR AS GC ON GC.GROUP_ID = G.ID;

CREATE OR REPLACE VIEW EXPLANATION_COMMENT_CONNECTIONS
AS
  SELECT C.ID AS COMMENT_ID,
        EXPL.AUTHOR_ID AS EXPLANATION_AUTHOR_ID,
        CP.AUTHOR_ID AS PARENT_COMMENT_AUTHOR_ID,
				CS.AUTHOR_ID AS SIBLING_COMMENT_AUTHOR_ID,
        CC.AUTHOR_ID AS CHILD_COMMENT_AUTHOR_ID,
				GC.USER_ID AS GROUP_CONTRIBUTOR_ID,
        F.USER_ID AS AUTHOR_FOLLOWER_ID,
        GF.USER_ID AS GROUP_FOLLOWER_ID,
        CTF.USER_ID AS TAG_FOLLOWER_ID
        FROM EXPLANATION_COMMENT AS C
        LEFT JOIN EXPLANATION AS EXPL ON EXPL.ID = C.EXPLANATION_ID
        LEFT JOIN EXPLANATION_COMMENT AS CP ON CP.ID = C.COMMENT_ID
				LEFT JOIN EXPLANATION_COMMENT AS CS ON C.COMMENT_ID = CS.COMMENT_ID
        LEFT JOIN EXPLANATION_COMMENT AS CC ON C.ID = CC.COMMENT_ID
				LEFT JOIN GROUPING AS G ON G.ID = EXPL.GROUP_AUTHOR_ID OR G.ID = CP.GROUP_AUTHOR_ID OR G.ID = CC.GROUP_AUTHOR_ID
				LEFT JOIN GROUP_CONTRIBUTOR AS GC ON GC.GROUP_ID = G.ID
        LEFT JOIN FOLLOWER AS F ON C.AUTHOR_ID = F.TARGET_ID
        LEFT JOIN GROUP_FOLLOWER AS GF ON C.GROUP_AUTHOR_ID = GF.GROUP_ID
        LEFT JOIN EXPLANATION_COMMENT_TAG AS CT ON CT.REFERENCE_ID = EXPL.ID
      	LEFT JOIN COMMENT_TAG_FOLLOWER AS CTF ON CTF.TAG_ID = CT.TAG_ID;

CREATE OR REPLACE VIEW QUESTION_COMMENT_CONNECTIONS
AS
  SELECT QC.ID AS COMMENT_ID,
        Q.ASKER_ID AS ASKER_ID,
				Q.SITE_ID,
				CP.AUTHOR_ID AS PARENT_COMMENT_AUTHOR_ID,
				CS.AUTHOR_ID AS SIBLING_COMMENT_AUTHOR_ID,
        CC.AUTHOR_ID AS CHILD_COMMENT_AUTHOR_ID,
				GC.USER_ID AS GROUP_CONTRIBUTOR_ID,
        F.USER_ID AS AUTHOR_FOLLOWER_ID,
        GF.USER_ID AS GROUP_FOLLOWER_ID,
        CTF.USER_ID AS TAG_FOLLOWER_ID
        FROM QUESTION_COMMENT AS QC
        LEFT JOIN QUESTION AS Q ON QC.ID = QC.QUESTION_ID
        LEFT JOIN QUESTION_COMMENT AS CP ON CP.ID = QC.COMMENT_ID
				LEFT JOIN QUESTION_COMMENT AS CS ON QC.COMMENT_ID = CS.COMMENT_ID
				LEFT JOIN QUESTION_COMMENT AS CC ON QC.ID = CC.COMMENT_ID
				LEFT JOIN GROUPING AS G ON G.ID = QC.GROUP_AUTHOR_ID OR Q.GROUP_ASKER_ID OR G.ID = CP.GROUP_AUTHOR_ID OR G.ID = CC.GROUP_AUTHOR_ID
				LEFT JOIN GROUP_CONTRIBUTOR AS GC ON GC.GROUP_ID = G.ID
        LEFT JOIN FOLLOWER AS F ON QC.AUTHOR_ID = F.TARGET_ID
        LEFT JOIN GROUP_FOLLOWER AS GF ON QC.GROUP_AUTHOR_ID = GF.GROUP_ID
        LEFT JOIN QUESTION_COMMENT_TAG AS QCT ON QCT.REFERENCE_ID = Q.ID
      	LEFT JOIN COMMENT_TAG_FOLLOWER AS CTF ON CTF.TAG_ID = QCT.TAG_ID;

-- CREATE OR REPLACE VIEW EXPLANATION_COMMENT_CONNECTIONS
-- AS
--   SELECT
--
-- CREATE OR REPLACE VIEW QUESTION_COMMENT_CONNECTIONS
-- AS
--   SELECT


CREATE OR REPLACE VIEW FOLLOWING
AS
  SELECT
        F.USER_ID,
        F.TARGET_ID,
        GF.GROUP_ID,
        QF.TAG_ID AS QUESTION_TAG_ID,
        EF.TAG_ID AS EXPLANATION_TAG_ID,
        CF.TAG_ID AS COMMENT_TAG_ID
        FROM FOLLOWER AS F
    LEFT JOIN GROUP_FOLLOWER AS GF ON F.USER_ID = GF.USER_ID
    LEFT JOIN QUESTION_TAG_FOLLOWER AS QF ON QF.USER_ID = GF.USER_ID
    LEFT JOIN COMMENT_TAG_FOLLOWER AS CF ON CF.USER_ID = GF.USER_ID
    LEFT JOIN EXPLANATION_TAG_FOLLOWER AS EF ON EF.USER_ID = GF.USER_ID;


CREATE OR REPLACE VIEW GROUPED_EXPLANATION_DETAIL
AS
  SELECT GE.EXPLANATION_ID,
      GE.GROUP_ID,
      IFNULL(SUM(LYKE), 0) AS LIKES,
      IFNULL(SUM(DISLIKE), 0) AS DISLIKES
    FROM GROUPED_EXPLANATION AS GE
    LEFT JOIN GROUPED_OPINION AS GO
      ON GE.EXPLANATION_ID = GO.EXPLANATION_ID AND GE.GROUP_ID = GO.GROUP_ID
            GROUP BY GE.GROUP_ID, GE.EXPLANATION_ID;

CREATE OR REPLACE VIEW ACCESSIBLE_GROUP
AS
  SELECT  GROUP_ID AS ID,
          IMAGE, NAME, DESCRIPTION, GC.EMAIL_NOTIFY, GC.IN_APP_NOTIFY,
          USER_ID,
          GC.ID AS CONTRIBUTOR_ID,
          LEVEL
    FROM GROUP_CONTRIBUTOR AS GC
    LEFT JOIN GROUPING AS G ON GC.GROUP_ID = G.ID
  UNION
  SELECT  ID,
          IMAGE, NAME, DESCRIPTION, EMAIL_NOTIFY, IN_APP_NOTIFY,
          CREATOR_ID AS USER_ID,
          -1 AS CONTRIBUTOR_ID,
          -1 AS LEVEL
    FROM GROUPING;

-- CREATE OR REPLACE VIEW GROUP_AUTH
--   SELECT NULL AS ID, CREATOR_ID AS USER_ID, GROUP_ID, 0 AS ADMIN FROM GROUP
--   UNION
--   SELECT * FROM GroupContributor
